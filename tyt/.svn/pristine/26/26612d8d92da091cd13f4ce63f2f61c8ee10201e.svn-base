<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		<!-- com.alibaba.druid.filter.config.ConfigTools you_password -->
		
		<!-- 本地mysql配置 -->
		
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/tyt" />
		<property name="username" value="root" />
		<property name="password" value="bNVOqb7WKLX5Bjnw+LMv92taj25KOxDimXxILPQjw42wgv+1lHzOH8kr97xDwWdhpY67QuYCS7sWN4W46YbkFA==" />
		
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		
		<!-- 缺省多个DruidDataSource的监控数据是各自独立的，在Druid-0.2.17版本之后，支持配置公用监控数据，配置参数为useGloalDataSourceStat -->
		<!-- <property name="useGlobalDataSourceStat" value="true" /> -->
		
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 每隔5分钟将监控日志输出到日志文件中，单位是毫秒。 -->
        <property name="timeBetweenLogStatsMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		
		<property name="proxyFilters">  
            <list>  
                <ref bean="stat-filter" />  
                <ref bean="log-filter" />  
            </list>   
        </property>

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<!-- Druid提供了WallFilter，它是基于SQL语义分析来实现防御SQL注入攻击的    -->
		<!--  -->
		<property name="filters" value="stat,wall,config" />
		
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-setting.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
          <array>
              <value>classpath*:mapper/**/*.xml</value>
              <value>classpath*:mappers/**/*.xml</value>
          </array>
      </property>
	</bean>

	<!-- 引入persist持久化bean的定义 -->
	<!-- <import resource="module-persist-*.xml"/> -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bquan.dao.read,com.bquan.dao.reads,com.bquan.dao.write,com.bquan.dao.writes" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">  
		<property name="mergeSql" value="true" />  
		<property name="slowSqlMillis" value="1000" />  
		<property name="logSlowSql" value="true" />  
	</bean>  
	
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<!-- <property name="resultSetLogEnabled" value="false" /> -->
	</bean>  

</beans>
